PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dc11: <http://purl.org/dc/elements/1.1/> 
PREFIX cc: <http://creativecommons.org/ns#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX srda: <https://data.digitopia.nl/srda#>

# this query will run at https://data.digitopia.nl/yasgui/ or any other SPARQL endpoint that has loaded 
# the RDA definitions from http://www.rdaregistry.info

CONSTRUCT {
    srda: a owl:Ontology .
    srda: dc11:title "Semantically named RDA elements"@en .
    srda: dc11:description "Provides semantically named RDA elements using owl:sameAs relations. Elements names are based on the English lexical aliasses."@en .
    srda: <http://purl.org/vocab/vann/preferredNamespacePrefix> "srda" .
    srda: dc11:rights "Based on work copyrighted by the American Library Association, Canadian Federation of Library Associations and CILIP: Chartered Institute of Library and Information Professionals"@en .
    srda: cc:licence <https://creativecommons.org/licenses/by/4.0/> .
    srda: owl:versionInfo "v5.0.19.1" .
    srda: dc11:modified "2024-04-05"^^xsd:date . 
  
    # all the RDA properties here as RDANL:
    ?srda owl:sameAs ?rda . 
    ?srda rdfs:label ?label .
}  
# obtain RDA definitions from https://github.com/RDARegistry/RDA-Vocabularies/releases:
WHERE { GRAPH <http://rdaregistry.info/Elements/v5.0.19/> {  
        
    # these are used the create the RDANL IRIs:
    VALUES (?lexical_suffix) { (".en") }
    VALUES (?srda_base) { ("https://data.digitopia.nl/srda#") }
        
    # skip deprecated elements:    
    FILTER (NOT EXISTS {?rda <http://metadataregistry.org/uri/profile/regap/status> <http://metadataregistry.org/uri/RegStatus/1008> } )

    # selects:
    ?rda <http://metadataregistry.org/uri/profile/regap/lexicalAlias> ?lexical_alias .    
    OPTIONAL { 
        ?rda rdfs:label ?label .
    }

    # construct rdanl IRI using ?lexical_alias and ?lexical_suffix:
    BIND (IRI(CONCAT(?srda_base, REPLACE(REPLACE(STR(?lexical_alias), "^.*/([^/]*)\u0024", "\u00241"), CONCAT("\\", ?lexical_suffix, "\u0024"), "", "i"))) as ?srda) 
  }
}